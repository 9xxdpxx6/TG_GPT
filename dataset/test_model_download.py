import os
import torch
from transformers import AutoTokenizer, AutoModelForCausalLM

def test_model_download():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥–µ–ª–∏ DialoGPT-small"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É—é –∑–∞–≥—Ä—É–∑–∫—É –º–æ–¥–µ–ª–∏ DialoGPT-small...")
    print("=" * 50)
    
    model_name = "microsoft/DialoGPT-small"
    
    try:
        print(f"üì• –ó–∞–≥—Ä—É–∂–∞—é —Ç–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä: {model_name}")
        tokenizer = AutoTokenizer.from_pretrained(model_name)
        print("‚úÖ –¢–æ–∫–µ–Ω–∏–∑–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
        
        print(f"üì• –ó–∞–≥—Ä—É–∂–∞—é –º–æ–¥–µ–ª—å: {model_name}")
        model = AutoModelForCausalLM.from_pretrained(model_name)
        print("‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏
        model_size_mb = sum(p.numel() for p in model.parameters()) * 4 / (1024 * 1024)
        print(f"üìä –†–∞–∑–º–µ—Ä –º–æ–¥–µ–ª–∏: {model_size_mb:.1f} –ú–ë")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≥–¥–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –º–æ–¥–µ–ª—å
        cache_dir = os.path.expanduser("~/.cache/huggingface/hub")
        print(f"üìÅ –ö—ç—à Hugging Face: {cache_dir}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ –≤ –∫—ç—à–µ
        if os.path.exists(cache_dir):
            print("üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –≤ –∫—ç—à–µ:")
            for item in os.listdir(cache_dir):
                if "microsoft" in item:
                    print(f"  - {item}")
        
        print("\nüéâ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ!")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥–µ–ª–∏: {e}")
        print("\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
        print("2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞")
        print("3. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å –ø–∞–º—è—Ç—å—é, –∑–∞–∫—Ä–æ–π—Ç–µ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
        return False

if __name__ == "__main__":
    test_model_download() 